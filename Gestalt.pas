unit Gestalt;interface	uses		QDOffscreen, Globals, Traps, Dialogs;	var		myErr: OSErr;		gestaltResponse: longint;{----------------------------}	function TrapAvailable (theTrap: integer): Boolean;	procedure ColorQuickdrawAvailable;{----------------------------}implementation	function NumToolboxTraps: integer;	begin		if NGetTrapAddress(_InitGraf, ToolTrap) = NGetTrapAddress($AA6E, ToolTrap) then			NumToolboxTraps := $200		else			NumToolboxTraps := $400;	end;{----------------------------}	function GetTrapType (theTrap: integer): TrapType;		const			TrapMask = $0800;	begin		if BAND(theTrap, TrapMask) > 0 then			GetTrapType := ToolTrap		else			GetTrapType := OSTrap;	end;{----------------------------}	function TrapAvailable (theTrap: integer): Boolean;		var			tType: TrapType;	begin		tType := GetTrapType(theTrap);		if tType = ToolTrap then			begin				theTrap := BAND(theTrap, $07FF);				if theTrap >= NumToolboxTraps then					theTrap := _Unimplemented;			end;		TrapAvailable := NGetTrapAddress(theTrap, tType) <> NGetTrapAddress(_Unimplemented, ToolTrap);	end;{----------------------------}	procedure ColorQuickdrawAvailable;	begin{ Gestalt / ColorQuickdraw handler }		gHasGestalt := TrapAvailable(_Gestalt);		if gHasGestalt then			begin				myErr := Gestalt(gestaltQuickdrawVersion, gestaltResponse);				if myErr = noErr then					gQuickdrawVersion := gestaltResponse				else					AlertWithMessage('Error - (ColorQuickdrawAvailable) Gestalt not available');				gColorQdAvailable := gQuickdrawVersion >= $100;			end;	end;end.