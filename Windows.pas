unit Windows;interface	uses		Globals;{----------------------------}	procedure SetUpScreen;	procedure SetUpWindows;	procedure DrawBackdrop;{----------------------------}implementation	procedure SetUpScreen;	begin		screenRect := screenBits.bounds;		with screenBits.bounds do			SetRect(dragRect, 4, 24, right - 4, bottom - 4);	end;{----------------------------}	procedure SetUpWindows;	begin		if gColorQdAvailable then			myWindow := GetNewCWindow(mediumWindowID, @wRecord, pointer(-1))		else			myWindow := GetNewWindow(smallWindowID, @wRecord, pointer(-1));		SetPort(myWindow);		windowRect := myWindow^.portRect;		windowWidth := windowRect.right - windowRect.left;		windowHeight := windowRect.bottom - windowRect.top;	end;{----------------------------}	procedure DrawBackdrop;	begin{ background color }		FillRect(windowRect, black);{ backdrop picture }		if gColorQdAvailable then			backdropPictH := GetPicture(backdropMediumColorPictID)		else			backdropPictH := GetPicture(backdropSmallBwPictID);		backdropPictRect := backdropPictH^^.picFrame;		backdropPictWidth := backdropPictRect.right - backdropPictRect.left;		backdropPictHeight := backdropPictRect.bottom - backdropPictRect.top;		backdropPictLeft := round((windowWidth - backdropPictWidth) / 2);		backdropPictTop := round((windowHeight - backdropPictHeight) / 2);		SetRect(backdropPictRect, backdropPictLeft, backdropPictTop, backdropPictLeft + backdropPictWidth, backdropPictTop + backdropPictHeight);		FillRect(backdropPictRect, white);		DrawPicture(backdropPictH, backdropPictRect);	end;{----------------------------}end.